'''
https://zhuanlan.zhihu.com/p/43191272
问题定义

    某食品加工厂主要生产即食产品，一般当天生产的产品必须当天售出，否则就会出现不能保质、或变质、造成一定的经济损失，如果市场需求量大而生产量不足，则也会影响工厂的销售收入，该产品的单位成本为1.5元，单位产品售价为4元。工厂为了避免产品滞销存货过多而造成的经济损失，提出了如何制定合理的生产与库存数量的方案问题，能够使得工厂能有尽可能多的收益，经初步考虑拟从以下两种生产与库存方案中选出一个较好的方案：
    方案(1)：按前一天的销售量作为当天的生产库存量。
    方案(2)：按前两天的平均销售量作为当天的生产库存量。

问题的分析与假设及参数定义

    解决问题的基本思路：利用蒙特卡罗方法随机模拟市场对该产品需求量，统计计算出按照两种不同方案 T 天后工厂的经济值，比较不同方案经济效益的大小，选出一个较好的方案。

    假设市场对该产品的每天需求数量是一个随机变量，从统计学的角度分析得知，该随机变量服从正态分布 N(1500, 30^2) 。
'''
import numpy as np

def mcun(T, S1, S21, S22):
    '''
    params:
    T: 模拟天数
    S1: 方案(1)前一天的销售量
    S21: S21表示方案(2)前一天的销售量
    S22: S22表示方案(2)前二天的销售量
    return:
    方案（1）利润；方案（2）利润
    '''
    LS1 = 0    # 方案(1)实际累计总利润
    LS2 = 0    # 方案(2)实际累计总利润
    k = 1
    while k < T:
        KC1 = S1                           # 方案(1)当天的生产与库存量
        KC2 = (S21 + S22) / 2              # 方案(2)当天的生产与库存量
        C = np.random.normal(1500, 100^2)   # 每天需求量
        if C > KC1:
            ST1 = KC1                      # 方案(1)当天的实际销售量
        else:
            ST1 = C
        if C > KC2:
            ST2 = KC2                      # 方案(2)当天的实际销售量
        else:
            ST2 = C
        L1 = 4 * ST1 - 1.5 * KC1           # 方案(1)当天的实际利润   
        L2 = 4 * ST2 - 1.5 * KC2           # 方案(2)当天的实际利润
        LS1 = LS1 + L1
        LS2 = LS2 + L2
        k = k + 1
        S1 = ST1
        S22 = S21
        S21 = ST2
    return int(LS1), int(LS2)


if __name__ == "__main__":
    print(mcun(20, 1500, 1500, 1400))
    print(mcun(20, 1500, 1500, 1600))
